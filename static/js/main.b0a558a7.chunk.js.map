{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Loader/Loader.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navbar","role","HomePage","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","sex","slug","PeopleTable","people","useParams","personSlug","checkNameInPeople","useCallback","parentName","foundPerson","find","parent","map","born","died","fatherName","motherName","Loader","PeoplePage","useState","setPeople","hasErrorInLoading","setHasErrorInLoading","hasErrorEmpty","setHasErrorEmpty","isLoading","setIsLoading","loadPeople","peopleFromServer","length","useEffect","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b0a558a7.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC <Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item',\n      { 'has-background-grey-lighter': isActive })}\n  >\n    {text}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const Navbar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug = '' } = useParams();\n\n  const checkNameInPeople = useCallback((parentName: string | null) => {\n    if (!parentName) {\n      return '-';\n    }\n\n    const foundPerson = people.find(parent => parent.name === parentName);\n\n    return foundPerson ? <PersonLink person={foundPerson} /> : parentName;\n  }, [people]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex, born, died, fatherName, motherName, slug,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames(\n                { 'has-background-warning': personSlug === person.slug },\n              )}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>{checkNameInPeople(motherName)}</td>\n              <td>{checkNameInPeople(fatherName)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasErrorInLoading, setHasErrorInLoading] = useState(false);\n  const [hasErrorEmpty, setHasErrorEmpty] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      if (peopleFromServer.length === 0) {\n        setHasErrorEmpty(true);\n      }\n\n      setPeople(peopleFromServer);\n    } catch {\n      setHasErrorInLoading(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasErrorInLoading && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {hasErrorEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people && people.length > 0 && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}